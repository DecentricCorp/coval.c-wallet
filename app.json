{
    "builds": {
        "web": {"default": true},
        "native": {
            "packager": "phonegap",
            "phonegap" : {
                "config": {
                    // Uncomment the line below and add the platform you wish to build for
                    "platform": "ios android",

                    // Uncomment and Set this line to true to enable PhoneGap Remote Building.
                    // To properly use this you must set the following properties in your local.properties file (if this file does not exist create it in your app root)
                    // phonegap.remote.username=myname@domain.com
                    // phonegap.remote.password=mys3cr3tp@ssw0rd
                    "remote": true,

                    "id": "io.freewallet.mobile",
                    "name": "FreeWallet"
                }
            }
        }
    },

                
    "framework": "touch",
    /**
     * The application's namespace, used by Sencha Command to generate classes
     */
    "name": "FW",

    /**
     * The file path to this application's front HTML document, relative to this app.json file
     */
    "indexHtmlPath": "index.html",

    /**
     * The absolute URL to this application in development environment, i.e: the URL to run this application
     * on your web browser during development, e.g: "http://localhost/myapp/index.html".
     *
     * This value is needed when build to resolve your application's dependencies if it requires server-side resources
     * that are not accessible via file system protocol.
     */
    "url": null,

    /**
     * List of all JavaScript assets in the right execution order.
     * Each item is an object with the following format:
     *      {
     *          "path": "path/to/script.js" // Path to file, if local file it must be relative to this app.json file
     *          "remote": true              // (Optional)
     *                                      // - Defaults to undefined (falsey) to signal a local file which will be copied
     *                                      // - Specify true if this file is a remote file which will not to be copied
     *          "update": "delta"           // (Optional)
     *                                      //  - If not specified, this file will only be loaded once, and
     *                                      //    cached inside localStorage until this value is changed.
     *                                      //  - "delta" to enable over-the-air delta update for this file
     *                                      //  - "full" means full update will be made when this file changes
     *          "x-bootstrap": true         // (Optional)
     *                                      // Indicates a development mode only dependency.  
     *                                      // These files will not be copied into the build directory or referenced
     *                                      // in the generate app.json manifest for the micro loader.
     *
     *      }
     */



    "js": [{
            "path": "touch/sencha-touch.js",
            "x-bootstrap": true
        },{
            "path": "bootstrap.js",
            "x-bootstrap": true
        },{
            "path": "resources/js/async.min.js",
            "update": "delta"
        },{
            "path": "resources/js/mnemonic.js",
            "update": "delta"
        },{
            "path": "resources/js/bitcore-lib.min.js",
            "update": "delta"
        },{
            "path": "resources/js/bitcore-message.min.js",
            "update": "delta"
        },{
            "path": "resources/js/util.bitcore.js",
            "update": "delta"
        },{
            "path": "resources/js/util.generic.js",
            "update": "delta"
        },{
            "path": "resources/js/cryptojs.min.js",
            "update": "delta"
        },{
            "path": "resources/js/jquery.min.js",
            "update": "delta"
        },{
            "path": "resources/js/jquery.base64.js",
            "update": "delta"
        },{
            "path": "resources/js/jquery.qrcode.min.js",
            "update": "delta"
        },{
            "path": "resources/js/moment.min.js",
            "update": "delta"
        },{
            "path": "resources/js/numeral.js",
            "update": "delta"
        },{
            // Careful when updating clipboard.js because it has been modified to replace the reserved word 'default' which causes sencha comand compiling issues
            "path": "resources/js/clipboard.js",
            "update": "delta"
        },{
            // QRCode scanner files (https://github.com/dwa012/html5-qrcode)
            "path": "resources/js/html5-qrcode.min.js",
            "update": "delta"
        },{
            "path": "resources/js/jsqrcode-combined.min.js",
            "update": "delta"
        },{
            "path": "app.js",
            "bundle": true,   /* Indicates that all class dependencies are concatenated into this file when build */
            "update": "delta"
        }
    ],

    /**
     * List of all CSS assets in the right inclusion order.
     * Each item is an object with the following format:
     *      {
     *          "path": "path/to/item.css" // Path to file, if local file it must be relative to this app.json file
     *          "remote": true             // (Optional)
     *                                     // - Defaults to undefined (falsey) to signal a local file which will be copied
     *                                     // - Specify true if this file is a remote file which will not to be copied
     *          "update": "delta"          // (Optional)
     *                                     //  - If not specified, this file will only be loaded once, and
     *                                     //    cached inside localStorage until this value is changed to either one below
     *                                     //  - "delta" to enable over-the-air delta update for this file
     *                                     //  - "full" means full update will be made when this file changes
     *
     *      }
     */
    "css": [
        {
            "path": "resources/css/app.css",
            "update": "delta"
        },{
            "path": "resources/css/font-awesome.min.css",
            "update": "delta"
        }
    ],

    /**
     * Used to automatically generate cache.manifest (HTML 5 application cache manifest) file when you build
     */
    "appCache": {
        /**
         * List of items in the CACHE MANIFEST section
         */
        "cache": [
            "index.html"
        ],
        /**
         * List of items in the NETWORK section
         */
        "network": [
            "*"
        ],
        /**
         * List of items in the FALLBACK section
         */
        "fallback": []
    },

    /**
     * Extra resources to be copied along when build
     */
    "resources": [
        "resources/images",
        "resources/icons",
        "resources/startup",
        "resources/fonts",
        "resources/js"
    ],

    /**
     * File / directory name matchers to ignore when copying to the builds, must be valid regular expressions
     */
    "ignore": [
        "\.svn$"
    ],

    /**
     * Directory path to store all previous production builds. Note that the content generated inside this directory
     * must be kept intact for proper generation of deltas between updates
     */
    "archivePath": "archive",

    /**
     * List of package names to require for the cmd build process
     */
    "requires": [
    ],

    /**
     * Uniquely generated id for this application, used as prefix for localStorage keys.
     * Normally you should never change this value.
     */
    "id": "202fa8b2-901b-4586-8fea-5fa442de295d"
}
